#===========================================================================#
#     PDFeverywhere 3.0  (c) 2001 Zhigang (Jeoy) Li / PDFeverywhere.com     #
#===========================================================================#
#	EmbeddedFont	Stream data of a embedded Type1 or TrueType font
#	FontDescriptor	Font data for non-built-in Type1 or TrueType fonts
#	PDFFont			Font object, for a font actually used in a document

#===========================================================================#
# FontDescriptor
#===========================================================================#

package FontDescriptor;

@ISA = qw(PDFTreeNode);

sub new {
	my( $class, $FontName, $Encoding ) = @_;
	my $this = {
		'FontName' => $FontName,
		'EmbedFile' => 0,
		'Encoding' => $Encoding,
	};
	bless $this, $class;
	my $FontPtr = $PDF::root->{Fonts}->{$FontName}->{$Encoding};
	if( $FontPtr->{Embed} ){
		$this->{EmbedFile} = new EmbeddedFont( $FontPtr->{FontDescriptor}->{FontFile}, $FontPtr->{Subtype} );
		$this->appendChild( $this->{EmbedFile} );
	}
	return $this;
}

sub makeCode {
	my $this = shift;
	my $FontPtr = $PDF::root->{Fonts}->{ $this->{FontName} }->{ $this->{Encoding} };
	my $DescPtr = $FontPtr->{FontDescriptor};
	print join( $PDF::endln,
		qq{$this->{ObjId} 0 obj},
		'<<',
		'/Type /FontDescriptor',
		qq{/FontName /$FontPtr->{BaseFont}},
		'/FontBBox [ ' . join( ' ', @{$DescPtr->{FontBBox}} ) . ' ]',
	);
	for( qw(Flags MissingWidth StemV StemH ItalicAngle CapHeight XHeight Ascent Descent MaxWidth AvgWidth) ){
		if( defined $DescPtr->{$_} ){
			print qq{$PDF::endln/$_ $DescPtr->{$_}};
		}
	}
	if( $FontPtr->{Embed} ){
		my $keyname = ( $FontPtr->{Subtype} eq 'Type1' )? 'FontFile': 'FontFile2';
		print qq{$PDF::endln/$keyname $this->{EmbedFile}->{ObjId} 0 R};
	}
	print join( $PDF::endln,
		'',
		'>>',
		'endobj',
		''
	);
}

sub finalize {
	my $this = shift;
	delete $this->{EmbedFile};
}

#===========================================================================#
# EmbeddedFont
#===========================================================================#

package EmbeddedFont;

use FileHandle;
use PDFStream;

@ISA = qw(PDFStream);

sub new {
	my( $class, $file, $type ) = @_;
	my $this = new PDFStream( );
	$this->{File} = $file;
	$this->{Length1} = 0;
	$this->{Type} = $type;
	bless $this, $class;
	my $buffer = '';
	my $len = 0;
	my $fh = new FileHandle( );
	open( $fh, "<$this->{File}" ) or die "Can't open file $file.";
	binmode( $fh );
	while( $len = read( $fh, $buffer, 4096 ) ){
		$this->{Stream} .= $buffer;
		$this->{Length1} += $len;
	}
	close( $fh );
	if( $type eq 'Type1' ){
		my @rec = unpack( 'CCV', substr( $this->{Stream}, 0, 6 ) );
		substr( $this->{Stream}, 0, 6 ) = '';
		if( $rec[0] != 128 || $rec[1] != 1 ){
			die "File $file doesn't appear to be a valid PFB file (1).";
		}
		$this->{Length1} = $rec[2];		# Length of ASCII portion (font description)
		@rec = unpack( 'CCV', substr( $this->{Stream}, $this->{Length1}, 6 ) );
		substr( $this->{Stream}, $this->{Length1}, 6 ) = '';
		if( $rec[0] != 128 || $rec[1] != 2 ){
			die "File $file doesn't appear to be a valid PFB file (2).";
		}
		$this->{Length2} = $rec[2];		# Length of binary portion (eexec data)
		@rec = unpack( 'CCV', substr( $this->{Stream}, $this->{Length1} + $this->{Length2}, 6 ) );
		substr( $this->{Stream}, $this->{Length1} + $this->{Length2}, 6 ) = '';
		if( $rec[0] != 128 || $rec[1] != 1 ){
			die "File $file doesn't appear to be a valid PFB file (3).";
		}
		$this->{Length3} = $rec[2];		# Length of ASCII portion (trailing zeros)
		substr( $this->{Stream}, $this->{Length1} + $this->{Length2} + $this->{Length3} ) = '';
	}
	return $this;
}

sub customCode {
	my $this = shift;
	print qq{$PDF::endln/Length1 $this->{Length1} };
	if( $this->{Type} eq 'Type1' ){
		print join( $PDF::endln,
			'',
			qq{/Length2 $this->{Length2} },
			qq{/Length3 $this->{Length3} },
		);
	}
}

#===========================================================================#
# PDFFont
#===========================================================================#

package PDFFont;

@ISA = qw(PDFTreeNode);

%PDFFont::AdobeFontNames = reverse (
	'TiRo'	=> 'Times-Roman',
	'TiBo'	=> 'Times-Bold',
	'TiBI'	=> 'Times-BoldItalic',
	'TiIt'	=> 'Times-Italic',
	'Cour'	=> 'Courier',
	'CoBo'	=> 'Courier-Bold',
	'CoOb'	=> 'Courier-Oblique',
	'CoBO'	=> 'Courier-BoldOblique',
	'Helv'	=> 'Helvetica',
	'HeOb'	=> 'Helvetica-Oblique',
	'HeBo'	=> 'Helvetica-Bold',
	'HeBO'	=> 'Helvetica-BoldOblique',
	'ZaDb'	=> 'ZapfDingbats',
);

#===========================================================================#
#     PDFeverywhere 3.0  (c) 2001 Zhigang (Jeoy) Li / PDFeverywhere.com     #
#===========================================================================#

# Deals with different encoding schemes:
# From 127 to 255
@PDFFont::WinAnsiEncoding = qw(bullet Euro bullet quotesinglbase florin quotedblbase 
	ellipsis dagger daggerdbl circumflex perthousand Scaron guilsinglleft OE 
	bullet Zcaron bullet bullet quoteleft quoteright quotedblleft quotedblright 
	bullet endash emdash tilde trademark scaron guilsinglright oe bullet zcaron 
	Ydieresis space exclamdown cent sterling currency yen brokenbar section 
	dieresis copyright ordfeminine guillemotleft logicalnot hyphen registered 
	macron degree plusminus twosuperior threesuperior acute mu paragraph 
	periodcentered cedilla onesuperior ordmasculine guillemotright onequarter 
	onehalf threequarters questiondown Agrave Aacute Acircumflex Atilde 
	Adieresis Aring AE Ccedilla Egrave Eacute Ecircumflex Edieresis Igrave 
	Iacute Icircumflex Idieresis Eth Ntilde Ograve Oacute Ocircumflex Otilde 
	Odieresis multiply Oslash Ugrave Uacute Ucircumflex Udieresis Yacute Thorn 
	germandbls agrave aacute acircumflex atilde adieresis aring ae ccedilla 
	egrave eacute ecircumflex edieresis igrave iacute icircumflex idieresis eth 
	ntilde ograve oacute ocircumflex otilde odieresis divide oslash ugrave 
	uacute ucircumflex udieresis yacute thorn ydieresis);
@PDFFont::PDFDocEncoding = qw(.notdef bullet dagger daggerdbl ellipsis emdash endash 
	florin fraction guilsinglleft guilsinglright minus perthousand quotedblbase 
	quotedblleft quotedblright quoteleft quoteright quotesinglbase trademark fi 
	fl Lslash OE Scaron Ydieresis Zcaron dotlessi lslash oe scaron zcaron 
	.notdef Euro exclamdown cent sterling currency yen brokenbar section 
	dieresis copyright ordfeminine guillemotleft logicalnot .notdef registered 
	macron degree plusminus twosuperior threesuperior acute mu paragraph 
	periodcentered cedilla onesuperior ordmasculine guillemotright onequarter 
	onehalf threequarters questiondown Agrave Aacute Acircumflex Atilde 
	Adieresis Aring AE Ccedilla Egrave Eacute Ecircumflex Edieresis Igrave 
	Iacute Icircumflex Idieresis Eth Ntilde Ograve Oacute Ocircumflex Otilde 
	Odieresis multiply Oslash Ugrave Uacute Ucircumflex Udieresis Yacute Thorn 
	germandbls agrave aacute acircumflex atilde adieresis aring ae ccedilla 
	egrave eacute ecircumflex edieresis igrave iacute icircumflex idieresis eth 
	ntilde ograve oacute ocircumflex otilde odieresis divide oslash ugrave 
	uacute ucircumflex udieresis yacute thorn ydieresis);
@PDFFont::MacRomanEncoding = qw(.notdef Adieresis Aring Ccedilla Eacute Ntilde 
	Odieresis Udieresis aacute agrave acircumflex adieresis atilde aring 
	ccedilla eacute egrave ecircumflex edieresis iacute igrave icircumflex 
	idieresis ntilde oacute ograve ocircumflex odieresis otilde uacute ugrave 
	ucircumflex udieresis dagger degree cent sterling section bullet paragraph 
	germandbls registered copyright trademark acute dieresis .notdef AE Oslash 
	.notdef plusminus .notdef .notdef yen mu .notdef .notdef .notdef .notdef 
	.notdef ordfeminine ordmasculine .notdef ae oslash questiondown exclamdown 
	logicalnot .notdef florin .notdef .notdef guillemotleft guillemotright 
	ellipsis space Agrave Atilde Otilde OE oe endash emdash quotedblleft 
	quotedblright quoteleft quoteright divide .notdef ydieresis Ydieresis 
	fraction currency guilsinglleft guilsinglright fi fl daggerdbl 
	periodcentered quotesinglbase quotedblbase perthousand Acircumflex 
	Ecircumflex Aacute Edieresis Egrave Iacute Icircumflex Idieresis Igrave 
	Oacute Ocircumflex .notdef Ograve Uacute Ucircumflex Ugrave dotlessi 
	circumflex tilde macron breve dotaccent ring cedilla hungarumlaut ogonek 
	caron);
@PDFFont::StandardEncoding = qw(.notdef .notdef .notdef .notdef .notdef .notdef 
	.notdef .notdef .notdef .notdef .notdef .notdef .notdef .notdef .notdef 
	.notdef .notdef .notdef .notdef .notdef .notdef .notdef .notdef .notdef 
	.notdef .notdef .notdef .notdef .notdef .notdef .notdef .notdef .notdef 
	.notdef exclamdown cent sterling fraction yen florin section currency 
	quotesingle quotedblleft guillemotleft guilsinglleft guilsinglright fi fl 
	.notdef endash dagger daggerdbl periodcentered .notdef paragraph bullet 
	quotesinglbase quotedblbase quotedblright guillemotright ellipsis 
	perthousand .notdef questiondown .notdef grave acute circumflex tilde macron 
	breve dotaccent dieresis .notdef ring cedilla .notdef hungarumlaut ogonek 
	caron emdash .notdef .notdef .notdef .notdef .notdef .notdef .notdef .notdef 
	.notdef .notdef .notdef .notdef .notdef .notdef .notdef .notdef AE .notdef 
	ordfeminine .notdef .notdef .notdef .notdef Lslash Oslash OE ordmasculine 
	.notdef .notdef .notdef .notdef .notdef ae .notdef .notdef .notdef dotlessi 
	.notdef .notdef lslash oslash oe germandbls .notdef .notdef .notdef 
	.notdef);

# From 24 to 31
@PDFFont::PDFDocEncodingExtra = qw(breve caron circumflex dotaccent hungarumlaut ogonek ring tilde);

# Common range: 32 to 126
# Available names: all except those for ascii codes between 32 to 126
# All range for Courier, Symbol, and ZapfDingbats: 32 to 254

%PDFFont::HelveticaAvail = (
	'.notdef' => 0,
	'AE' => 1000,
	'Aacute' => 667,
	'Abreve' => 667,
	'Acircumflex' => 667,
	'Adieresis' => 667,
	'Agrave' => 667,
	'Amacron' => 667,
	'Aogonek' => 667,
	'Aring' => 667,
	'Atilde' => 667,
	'Cacute' => 722,
	'Ccaron' => 722,
	'Ccedilla' => 722,
	'Dcaron' => 722,
	'Dcroat' => 722,
	'Delta' => 612,
	'Eacute' => 667,
	'Ecaron' => 667,
	'Ecircumflex' => 667,
	'Edieresis' => 667,
	'Edotaccent' => 667,
	'Egrave' => 667,
	'Emacron' => 667,
	'Eogonek' => 667,
	'Eth' => 722,
	'Euro' => 556,
	'Gbreve' => 778,
	'Gcommaaccent' => 778,
	'Iacute' => 278,
	'Icircumflex' => 278,
	'Idieresis' => 278,
	'Idotaccent' => 278,
	'Igrave' => 278,
	'Imacron' => 278,
	'Iogonek' => 278,
	'Kcommaaccent' => 667,
	'Lacute' => 556,
	'Lcaron' => 556,
	'Lcommaaccent' => 556,
	'Lslash' => 556,
	'Nacute' => 722,
	'Ncaron' => 722,
	'Ncommaaccent' => 722,
	'Ntilde' => 722,
	'OE' => 1000,
	'Oacute' => 778,
	'Ocircumflex' => 778,
	'Odieresis' => 778,
	'Ograve' => 778,
	'Ohungarumlaut' => 778,
	'Omacron' => 778,
	'Oslash' => 778,
	'Otilde' => 778,
	'Racute' => 722,
	'Rcaron' => 722,
	'Rcommaaccent' => 722,
	'Sacute' => 667,
	'Scaron' => 667,
	'Scedilla' => 667,
	'Scommaaccent' => 667,
	'Tcaron' => 611,
	'Tcommaaccent' => 611,
	'Thorn' => 667,
	'Uacute' => 722,
	'Ucircumflex' => 722,
	'Udieresis' => 722,
	'Ugrave' => 722,
	'Uhungarumlaut' => 722,
	'Umacron' => 722,
	'Uogonek' => 722,
	'Uring' => 722,
	'Yacute' => 667,
	'Ydieresis' => 667,
	'Zacute' => 611,
	'Zcaron' => 611,
	'Zdotaccent' => 611,
	'aacute' => 556,
	'abreve' => 556,
	'acircumflex' => 556,
	'acute' => 333,
	'adieresis' => 556,
	'ae' => 889,
	'agrave' => 556,
	'amacron' => 556,
	'aogonek' => 556,
	'aring' => 556,
	'atilde' => 556,
	'breve' => 333,
	'brokenbar' => 260,
	'bullet' => 350,
	'cacute' => 500,
	'caron' => 333,
	'ccaron' => 500,
	'ccedilla' => 500,
	'cedilla' => 333,
	'cent' => 556,
	'circumflex' => 333,
	'commaaccent' => 250,
	'copyright' => 737,
	'currency' => 556,
	'dagger' => 556,
	'daggerdbl' => 556,
	'dcaron' => 643,
	'dcroat' => 556,
	'degree' => 400,
	'dieresis' => 333,
	'divide' => 584,
	'dotaccent' => 333,
	'dotlessi' => 278,
	'eacute' => 556,
	'ecaron' => 556,
	'ecircumflex' => 556,
	'edieresis' => 556,
	'edotaccent' => 556,
	'egrave' => 556,
	'ellipsis' => 1000,
	'emacron' => 556,
	'emdash' => 1000,
	'endash' => 556,
	'eogonek' => 556,
	'eth' => 556,
	'exclamdown' => 333,
	'fi' => 500,
	'fl' => 500,
	'florin' => 556,
	'fraction' => 167,
	'gbreve' => 556,
	'gcommaaccent' => 556,
	'germandbls' => 611,
	'greaterequal' => 549,
	'guillemotleft' => 556,
	'guillemotright' => 556,
	'guilsinglleft' => 333,
	'guilsinglright' => 333,
	'hungarumlaut' => 333,
	'iacute' => 278,
	'icircumflex' => 278,
	'idieresis' => 278,
	'igrave' => 278,
	'imacron' => 278,
	'iogonek' => 222,
	'kcommaaccent' => 500,
	'lacute' => 222,
	'lcaron' => 299,
	'lcommaaccent' => 222,
	'lessequal' => 549,
	'logicalnot' => 584,
	'lozenge' => 471,
	'lslash' => 222,
	'macron' => 333,
	'minus' => 584,
	'mu' => 556,
	'multiply' => 584,
	'nacute' => 556,
	'ncaron' => 556,
	'ncommaaccent' => 556,
	'notequal' => 549,
	'ntilde' => 556,
	'oacute' => 556,
	'ocircumflex' => 556,
	'odieresis' => 556,
	'oe' => 944,
	'ogonek' => 333,
	'ograve' => 556,
	'ohungarumlaut' => 556,
	'omacron' => 556,
	'onehalf' => 834,
	'onequarter' => 834,
	'onesuperior' => 333,
	'ordfeminine' => 370,
	'ordmasculine' => 365,
	'oslash' => 611,
	'otilde' => 556,
	'paragraph' => 537,
	'partialdiff' => 476,
	'periodcentered' => 278,
	'perthousand' => 1000,
	'plusminus' => 584,
	'questiondown' => 611,
	'quotedblbase' => 333,
	'quotedblleft' => 333,
	'quotedblright' => 333,
	'quoteleft' => 222,
	'quoteright' => 222,
	'quotesinglbase' => 222,
	'racute' => 333,
	'radical' => 453,
	'rcaron' => 333,
	'rcommaaccent' => 333,
	'registered' => 737,
	'ring' => 333,
	'sacute' => 500,
	'scaron' => 500,
	'scedilla' => 500,
	'scommaaccent' => 500,
	'section' => 556,
	'sterling' => 556,
	'summation' => 600,
	'tcaron' => 317,
	'tcommaaccent' => 278,
	'thorn' => 556,
	'threequarters' => 834,
	'threesuperior' => 333,
	'tilde' => 333,
	'trademark' => 1000,
	'twosuperior' => 333,
	'uacute' => 556,
	'ucircumflex' => 556,
	'udieresis' => 556,
	'ugrave' => 556,
	'uhungarumlaut' => 556,
	'umacron' => 556,
	'uogonek' => 556,
	'uring' => 556,
	'yacute' => 500,
	'ydieresis' => 500,
	'yen' => 556,
	'zacute' => 500,
	'zcaron' => 500,
	'zdotaccent' => 500,
);

%PDFFont::HelveticaBoldAvail = (
	'.notdef' => 0,
	'AE' => 1000,
	'Aacute' => 722,
	'Abreve' => 722,
	'Acircumflex' => 722,
	'Adieresis' => 722,
	'Agrave' => 722,
	'Amacron' => 722,
	'Aogonek' => 722,
	'Aring' => 722,
	'Atilde' => 722,
	'Cacute' => 722,
	'Ccaron' => 722,
	'Ccedilla' => 722,
	'Dcaron' => 722,
	'Dcroat' => 722,
	'Delta' => 612,
	'Eacute' => 667,
	'Ecaron' => 667,
	'Ecircumflex' => 667,
	'Edieresis' => 667,
	'Edotaccent' => 667,
	'Egrave' => 667,
	'Emacron' => 667,
	'Eogonek' => 667,
	'Eth' => 722,
	'Euro' => 556,
	'Gbreve' => 778,
	'Gcommaaccent' => 778,
	'Iacute' => 278,
	'Icircumflex' => 278,
	'Idieresis' => 278,
	'Idotaccent' => 278,
	'Igrave' => 278,
	'Imacron' => 278,
	'Iogonek' => 278,
	'Kcommaaccent' => 722,
	'Lacute' => 611,
	'Lcaron' => 611,
	'Lcommaaccent' => 611,
	'Lslash' => 611,
	'Nacute' => 722,
	'Ncaron' => 722,
	'Ncommaaccent' => 722,
	'Ntilde' => 722,
	'OE' => 1000,
	'Oacute' => 778,
	'Ocircumflex' => 778,
	'Odieresis' => 778,
	'Ograve' => 778,
	'Ohungarumlaut' => 778,
	'Omacron' => 778,
	'Oslash' => 778,
	'Otilde' => 778,
	'Racute' => 722,
	'Rcaron' => 722,
	'Rcommaaccent' => 722,
	'Sacute' => 667,
	'Scaron' => 667,
	'Scedilla' => 667,
	'Scommaaccent' => 667,
	'Tcaron' => 611,
	'Tcommaaccent' => 611,
	'Thorn' => 667,
	'Uacute' => 722,
	'Ucircumflex' => 722,
	'Udieresis' => 722,
	'Ugrave' => 722,
	'Uhungarumlaut' => 722,
	'Umacron' => 722,
	'Uogonek' => 722,
	'Uring' => 722,
	'Yacute' => 667,
	'Ydieresis' => 667,
	'Zacute' => 611,
	'Zcaron' => 611,
	'Zdotaccent' => 611,
	'aacute' => 556,
	'abreve' => 556,
	'acircumflex' => 556,
	'acute' => 333,
	'adieresis' => 556,
	'ae' => 889,
	'agrave' => 556,
	'amacron' => 556,
	'aogonek' => 556,
	'aring' => 556,
	'atilde' => 556,
	'breve' => 333,
	'brokenbar' => 280,
	'bullet' => 350,
	'cacute' => 556,
	'caron' => 333,
	'ccaron' => 556,
	'ccedilla' => 556,
	'cedilla' => 333,
	'cent' => 556,
	'circumflex' => 333,
	'commaaccent' => 250,
	'copyright' => 737,
	'currency' => 556,
	'dagger' => 556,
	'daggerdbl' => 556,
	'dcaron' => 743,
	'dcroat' => 611,
	'degree' => 400,
	'dieresis' => 333,
	'divide' => 584,
	'dotaccent' => 333,
	'dotlessi' => 278,
	'eacute' => 556,
	'ecaron' => 556,
	'ecircumflex' => 556,
	'edieresis' => 556,
	'edotaccent' => 556,
	'egrave' => 556,
	'ellipsis' => 1000,
	'emacron' => 556,
	'emdash' => 1000,
	'endash' => 556,
	'eogonek' => 556,
	'eth' => 611,
	'exclamdown' => 333,
	'fi' => 611,
	'fl' => 611,
	'florin' => 556,
	'fraction' => 167,
	'gbreve' => 611,
	'gcommaaccent' => 611,
	'germandbls' => 611,
	'greaterequal' => 549,
	'guillemotleft' => 556,
	'guillemotright' => 556,
	'guilsinglleft' => 333,
	'guilsinglright' => 333,
	'hungarumlaut' => 333,
	'iacute' => 278,
	'icircumflex' => 278,
	'idieresis' => 278,
	'igrave' => 278,
	'imacron' => 278,
	'iogonek' => 278,
	'kcommaaccent' => 556,
	'lacute' => 278,
	'lcaron' => 400,
	'lcommaaccent' => 278,
	'lessequal' => 549,
	'logicalnot' => 584,
	'lozenge' => 494,
	'lslash' => 278,
	'macron' => 333,
	'minus' => 584,
	'mu' => 611,
	'multiply' => 584,
	'nacute' => 611,
	'ncaron' => 611,
	'ncommaaccent' => 611,
	'notequal' => 549,
	'ntilde' => 611,
	'oacute' => 611,
	'ocircumflex' => 611,
	'odieresis' => 611,
	'oe' => 944,
	'ogonek' => 333,
	'ograve' => 611,
	'ohungarumlaut' => 611,
	'omacron' => 611,
	'onehalf' => 834,
	'onequarter' => 834,
	'onesuperior' => 333,
	'ordfeminine' => 370,
	'ordmasculine' => 365,
	'oslash' => 611,
	'otilde' => 611,
	'paragraph' => 556,
	'partialdiff' => 494,
	'periodcentered' => 278,
	'perthousand' => 1000,
	'plusminus' => 584,
	'questiondown' => 611,
	'quotedblbase' => 500,
	'quotedblleft' => 500,
	'quotedblright' => 500,
	'quoteleft' => 278,
	'quoteright' => 278,
	'quotesinglbase' => 278,
	'racute' => 389,
	'radical' => 549,
	'rcaron' => 389,
	'rcommaaccent' => 389,
	'registered' => 737,
	'ring' => 333,
	'sacute' => 556,
	'scaron' => 556,
	'scedilla' => 556,
	'scommaaccent' => 556,
	'section' => 556,
	'sterling' => 556,
	'summation' => 600,
	'tcaron' => 389,
	'tcommaaccent' => 333,
	'thorn' => 611,
	'threequarters' => 834,
	'threesuperior' => 333,
	'tilde' => 333,
	'trademark' => 1000,
	'twosuperior' => 333,
	'uacute' => 611,
	'ucircumflex' => 611,
	'udieresis' => 611,
	'ugrave' => 611,
	'uhungarumlaut' => 611,
	'umacron' => 611,
	'uogonek' => 611,
	'uring' => 611,
	'yacute' => 556,
	'ydieresis' => 556,
	'yen' => 556,
	'zacute' => 500,
	'zcaron' => 500,
	'zdotaccent' => 500,
);

%PDFFont::HelveticaBoldObliqueAvail = (
	'.notdef' => 0,
	'AE' => 1000,
	'Aacute' => 722,
	'Abreve' => 722,
	'Acircumflex' => 722,
	'Adieresis' => 722,
	'Agrave' => 722,
	'Amacron' => 722,
	'Aogonek' => 722,
	'Aring' => 722,
	'Atilde' => 722,
	'Cacute' => 722,
	'Ccaron' => 722,
	'Ccedilla' => 722,
	'Dcaron' => 722,
	'Dcroat' => 722,
	'Delta' => 612,
	'Eacute' => 667,
	'Ecaron' => 667,
	'Ecircumflex' => 667,
	'Edieresis' => 667,
	'Edotaccent' => 667,
	'Egrave' => 667,
	'Emacron' => 667,
	'Eogonek' => 667,
	'Eth' => 722,
	'Euro' => 556,
	'Gbreve' => 778,
	'Gcommaaccent' => 778,
	'Iacute' => 278,
	'Icircumflex' => 278,
	'Idieresis' => 278,
	'Idotaccent' => 278,
	'Igrave' => 278,
	'Imacron' => 278,
	'Iogonek' => 278,
	'Kcommaaccent' => 722,
	'Lacute' => 611,
	'Lcaron' => 611,
	'Lcommaaccent' => 611,
	'Lslash' => 611,
	'Nacute' => 722,
	'Ncaron' => 722,
	'Ncommaaccent' => 722,
	'Ntilde' => 722,
	'OE' => 1000,
	'Oacute' => 778,
	'Ocircumflex' => 778,
	'Odieresis' => 778,
	'Ograve' => 778,
	'Ohungarumlaut' => 778,
	'Omacron' => 778,
	'Oslash' => 778,
	'Otilde' => 778,
	'Racute' => 722,
	'Rcaron' => 722,
	'Rcommaaccent' => 722,
	'Sacute' => 667,
	'Scaron' => 667,
	'Scedilla' => 667,
	'Scommaaccent' => 667,
	'Tcaron' => 611,
	'Tcommaaccent' => 611,
	'Thorn' => 667,
	'Uacute' => 722,
	'Ucircumflex' => 722,
	'Udieresis' => 722,
	'Ugrave' => 722,
	'Uhungarumlaut' => 722,
	'Umacron' => 722,
	'Uogonek' => 722,
	'Uring' => 722,
	'Yacute' => 667,
	'Ydieresis' => 667,
	'Zacute' => 611,
	'Zcaron' => 611,
	'Zdotaccent' => 611,
	'aacute' => 556,
	'abreve' => 556,
	'acircumflex' => 556,
	'acute' => 333,
	'adieresis' => 556,
	'ae' => 889,
	'agrave' => 556,
	'amacron' => 556,
	'aogonek' => 556,
	'aring' => 556,
	'atilde' => 556,
	'breve' => 333,
	'brokenbar' => 280,
	'bullet' => 350,
	'cacute' => 556,
	'caron' => 333,
	'ccaron' => 556,
	'ccedilla' => 556,
	'cedilla' => 333,
	'cent' => 556,
	'circumflex' => 333,
	'commaaccent' => 250,
	'copyright' => 737,
	'currency' => 556,
	'dagger' => 556,
	'daggerdbl' => 556,
	'dcaron' => 743,
	'dcroat' => 611,
	'degree' => 400,
	'dieresis' => 333,
	'divide' => 584,
	'dotaccent' => 333,
	'dotlessi' => 278,
	'eacute' => 556,
	'ecaron' => 556,
	'ecircumflex' => 556,
	'edieresis' => 556,
	'edotaccent' => 556,
	'egrave' => 556,
	'ellipsis' => 1000,
	'emacron' => 556,
	'emdash' => 1000,
	'endash' => 556,
	'eogonek' => 556,
	'eth' => 611,
	'exclamdown' => 333,
	'fi' => 611,
	'fl' => 611,
	'florin' => 556,
	'fraction' => 167,
	'gbreve' => 611,
	'gcommaaccent' => 611,
	'germandbls' => 611,
	'greaterequal' => 549,
	'guillemotleft' => 556,
	'guillemotright' => 556,
	'guilsinglleft' => 333,
	'guilsinglright' => 333,
	'hungarumlaut' => 333,
	'iacute' => 278,
	'icircumflex' => 278,
	'idieresis' => 278,
	'igrave' => 278,
	'imacron' => 278,
	'iogonek' => 278,
	'kcommaaccent' => 556,
	'lacute' => 278,
	'lcaron' => 400,
	'lcommaaccent' => 278,
	'lessequal' => 549,
	'logicalnot' => 584,
	'lozenge' => 494,
	'lslash' => 278,
	'macron' => 333,
	'minus' => 584,
	'mu' => 611,
	'multiply' => 584,
	'nacute' => 611,
	'ncaron' => 611,
	'ncommaaccent' => 611,
	'notequal' => 549,
	'ntilde' => 611,
	'oacute' => 611,
	'ocircumflex' => 611,
	'odieresis' => 611,
	'oe' => 944,
	'ogonek' => 333,
	'ograve' => 611,
	'ohungarumlaut' => 611,
	'omacron' => 611,
	'onehalf' => 834,
	'onequarter' => 834,
	'onesuperior' => 333,
	'ordfeminine' => 370,
	'ordmasculine' => 365,
	'oslash' => 611,
	'otilde' => 611,
	'paragraph' => 556,
	'partialdiff' => 494,
	'periodcentered' => 278,
	'perthousand' => 1000,
	'plusminus' => 584,
	'questiondown' => 611,
	'quotedblbase' => 500,
	'quotedblleft' => 500,
	'quotedblright' => 500,
	'quoteleft' => 278,
	'quoteright' => 278,
	'quotesinglbase' => 278,
	'racute' => 389,
	'radical' => 549,
	'rcaron' => 389,
	'rcommaaccent' => 389,
	'registered' => 737,
	'ring' => 333,
	'sacute' => 556,
	'scaron' => 556,
	'scedilla' => 556,
	'scommaaccent' => 556,
	'section' => 556,
	'sterling' => 556,
	'summation' => 600,
	'tcaron' => 389,
	'tcommaaccent' => 333,
	'thorn' => 611,
	'threequarters' => 834,
	'threesuperior' => 333,
	'tilde' => 333,
	'trademark' => 1000,
	'twosuperior' => 333,
	'uacute' => 611,
	'ucircumflex' => 611,
	'udieresis' => 611,
	'ugrave' => 611,
	'uhungarumlaut' => 611,
	'umacron' => 611,
	'uogonek' => 611,
	'uring' => 611,
	'yacute' => 556,
	'ydieresis' => 556,
	'yen' => 556,
	'zacute' => 500,
	'zcaron' => 500,
	'zdotaccent' => 500,
);

%PDFFont::HelveticaObliqueAvail = (
	'.notdef' => 0,
	'AE' => 1000,
	'Aacute' => 667,
	'Abreve' => 667,
	'Acircumflex' => 667,
	'Adieresis' => 667,
	'Agrave' => 667,
	'Amacron' => 667,
	'Aogonek' => 667,
	'Aring' => 667,
	'Atilde' => 667,
	'Cacute' => 722,
	'Ccaron' => 722,
	'Ccedilla' => 722,
	'Dcaron' => 722,
	'Dcroat' => 722,
	'Delta' => 612,
	'Eacute' => 667,
	'Ecaron' => 667,
	'Ecircumflex' => 667,
	'Edieresis' => 667,
	'Edotaccent' => 667,
	'Egrave' => 667,
	'Emacron' => 667,
	'Eogonek' => 667,
	'Eth' => 722,
	'Euro' => 556,
	'Gbreve' => 778,
	'Gcommaaccent' => 778,
	'Iacute' => 278,
	'Icircumflex' => 278,
	'Idieresis' => 278,
	'Idotaccent' => 278,
	'Igrave' => 278,
	'Imacron' => 278,
	'Iogonek' => 278,
	'Kcommaaccent' => 667,
	'Lacute' => 556,
	'Lcaron' => 556,
	'Lcommaaccent' => 556,
	'Lslash' => 556,
	'Nacute' => 722,
	'Ncaron' => 722,
	'Ncommaaccent' => 722,
	'Ntilde' => 722,
	'OE' => 1000,
	'Oacute' => 778,
	'Ocircumflex' => 778,
	'Odieresis' => 778,
	'Ograve' => 778,
	'Ohungarumlaut' => 778,
	'Omacron' => 778,
	'Oslash' => 778,
	'Otilde' => 778,
	'Racute' => 722,
	'Rcaron' => 722,
	'Rcommaaccent' => 722,
	'Sacute' => 667,
	'Scaron' => 667,
	'Scedilla' => 667,
	'Scommaaccent' => 667,
	'Tcaron' => 611,
	'Tcommaaccent' => 611,
	'Thorn' => 667,
	'Uacute' => 722,
	'Ucircumflex' => 722,
	'Udieresis' => 722,
	'Ugrave' => 722,
	'Uhungarumlaut' => 722,
	'Umacron' => 722,
	'Uogonek' => 722,
	'Uring' => 722,
	'Yacute' => 667,
	'Ydieresis' => 667,
	'Zacute' => 611,
	'Zcaron' => 611,
	'Zdotaccent' => 611,
	'aacute' => 556,
	'abreve' => 556,
	'acircumflex' => 556,
	'acute' => 333,
	'adieresis' => 556,
	'ae' => 889,
	'agrave' => 556,
	'amacron' => 556,
	'aogonek' => 556,
	'aring' => 556,
	'atilde' => 556,
	'breve' => 333,
	'brokenbar' => 260,
	'bullet' => 350,
	'cacute' => 500,
	'caron' => 333,
	'ccaron' => 500,
	'ccedilla' => 500,
	'cedilla' => 333,
	'cent' => 556,
	'circumflex' => 333,
	'commaaccent' => 250,
	'copyright' => 737,
	'currency' => 556,
	'dagger' => 556,
	'daggerdbl' => 556,
	'dcaron' => 643,
	'dcroat' => 556,
	'degree' => 400,
	'dieresis' => 333,
	'divide' => 584,
	'dotaccent' => 333,
	'dotlessi' => 278,
	'eacute' => 556,
	'ecaron' => 556,
	'ecircumflex' => 556,
	'edieresis' => 556,
	'edotaccent' => 556,
	'egrave' => 556,
	'ellipsis' => 1000,
	'emacron' => 556,
	'emdash' => 1000,
	'endash' => 556,
	'eogonek' => 556,
	'eth' => 556,
	'exclamdown' => 333,
	'fi' => 500,
	'fl' => 500,
	'florin' => 556,
	'fraction' => 167,
	'gbreve' => 556,
	'gcommaaccent' => 556,
	'germandbls' => 611,
	'greaterequal' => 549,
	'guillemotleft' => 556,
	'guillemotright' => 556,
	'guilsinglleft' => 333,
	'guilsinglright' => 333,
	'hungarumlaut' => 333,
	'iacute' => 278,
	'icircumflex' => 278,
	'idieresis' => 278,
	'igrave' => 278,
	'imacron' => 278,
	'iogonek' => 222,
	'kcommaaccent' => 500,
	'lacute' => 222,
	'lcaron' => 299,
	'lcommaaccent' => 222,
	'lessequal' => 549,
	'logicalnot' => 584,
	'lozenge' => 471,
	'lslash' => 222,
	'macron' => 333,
	'minus' => 584,
	'mu' => 556,
	'multiply' => 584,
	'nacute' => 556,
	'ncaron' => 556,
	'ncommaaccent' => 556,
	'notequal' => 549,
	'ntilde' => 556,
	'oacute' => 556,
	'ocircumflex' => 556,
	'odieresis' => 556,
	'oe' => 944,
	'ogonek' => 333,
	'ograve' => 556,
	'ohungarumlaut' => 556,
	'omacron' => 556,
	'onehalf' => 834,
	'onequarter' => 834,
	'onesuperior' => 333,
	'ordfeminine' => 370,
	'ordmasculine' => 365,
	'oslash' => 611,
	'otilde' => 556,
	'paragraph' => 537,
	'partialdiff' => 476,
	'periodcentered' => 278,
	'perthousand' => 1000,
	'plusminus' => 584,
	'questiondown' => 611,
	'quotedblbase' => 333,
	'quotedblleft' => 333,
	'quotedblright' => 333,
	'quoteleft' => 222,
	'quoteright' => 222,
	'quotesinglbase' => 222,
	'racute' => 333,
	'radical' => 453,
	'rcaron' => 333,
	'rcommaaccent' => 333,
	'registered' => 737,
	'ring' => 333,
	'sacute' => 500,
	'scaron' => 500,
	'scedilla' => 500,
	'scommaaccent' => 500,
	'section' => 556,
	'sterling' => 556,
	'summation' => 600,
	'tcaron' => 317,
	'tcommaaccent' => 278,
	'thorn' => 556,
	'threequarters' => 834,
	'threesuperior' => 333,
	'tilde' => 333,
	'trademark' => 1000,
	'twosuperior' => 333,
	'uacute' => 556,
	'ucircumflex' => 556,
	'udieresis' => 556,
	'ugrave' => 556,
	'uhungarumlaut' => 556,
	'umacron' => 556,
	'uogonek' => 556,
	'uring' => 556,
	'yacute' => 500,
	'ydieresis' => 500,
	'yen' => 556,
	'zacute' => 500,
	'zcaron' => 500,
	'zdotaccent' => 500,
);

%PDFFont::TimesBoldAvail = (
	'.notdef' => 0,
	'AE' => 1000,
	'Aacute' => 722,
	'Abreve' => 722,
	'Acircumflex' => 722,
	'Adieresis' => 722,
	'Agrave' => 722,
	'Amacron' => 722,
	'Aogonek' => 722,
	'Aring' => 722,
	'Atilde' => 722,
	'Cacute' => 722,
	'Ccaron' => 722,
	'Ccedilla' => 722,
	'Dcaron' => 722,
	'Dcroat' => 722,
	'Delta' => 612,
	'Eacute' => 667,
	'Ecaron' => 667,
	'Ecircumflex' => 667,
	'Edieresis' => 667,
	'Edotaccent' => 667,
	'Egrave' => 667,
	'Emacron' => 667,
	'Eogonek' => 667,
	'Eth' => 722,
	'Euro' => 500,
	'Gbreve' => 778,
	'Gcommaaccent' => 778,
	'Iacute' => 389,
	'Icircumflex' => 389,
	'Idieresis' => 389,
	'Idotaccent' => 389,
	'Igrave' => 389,
	'Imacron' => 389,
	'Iogonek' => 389,
	'Kcommaaccent' => 778,
	'Lacute' => 667,
	'Lcaron' => 667,
	'Lcommaaccent' => 667,
	'Lslash' => 667,
	'Nacute' => 722,
	'Ncaron' => 722,
	'Ncommaaccent' => 722,
	'Ntilde' => 722,
	'OE' => 1000,
	'Oacute' => 778,
	'Ocircumflex' => 778,
	'Odieresis' => 778,
	'Ograve' => 778,
	'Ohungarumlaut' => 778,
	'Omacron' => 778,
	'Oslash' => 778,
	'Otilde' => 778,
	'Racute' => 722,
	'Rcaron' => 722,
	'Rcommaaccent' => 722,
	'Sacute' => 556,
	'Scaron' => 556,
	'Scedilla' => 556,
	'Scommaaccent' => 556,
	'Tcaron' => 667,
	'Tcommaaccent' => 667,
	'Thorn' => 611,
	'Uacute' => 722,
	'Ucircumflex' => 722,
	'Udieresis' => 722,
	'Ugrave' => 722,
	'Uhungarumlaut' => 722,
	'Umacron' => 722,
	'Uogonek' => 722,
	'Uring' => 722,
	'Yacute' => 722,
	'Ydieresis' => 722,
	'Zacute' => 667,
	'Zcaron' => 667,
	'Zdotaccent' => 667,
	'aacute' => 500,
	'abreve' => 500,
	'acircumflex' => 500,
	'acute' => 333,
	'adieresis' => 500,
	'ae' => 722,
	'agrave' => 500,
	'amacron' => 500,
	'aogonek' => 500,
	'aring' => 500,
	'atilde' => 500,
	'breve' => 333,
	'brokenbar' => 220,
	'bullet' => 350,
	'cacute' => 444,
	'caron' => 333,
	'ccaron' => 444,
	'ccedilla' => 444,
	'cedilla' => 333,
	'cent' => 500,
	'circumflex' => 333,
	'commaaccent' => 250,
	'copyright' => 747,
	'currency' => 500,
	'dagger' => 500,
	'daggerdbl' => 500,
	'dcaron' => 672,
	'dcroat' => 556,
	'degree' => 400,
	'dieresis' => 333,
	'divide' => 570,
	'dotaccent' => 333,
	'dotlessi' => 278,
	'eacute' => 444,
	'ecaron' => 444,
	'ecircumflex' => 444,
	'edieresis' => 444,
	'edotaccent' => 444,
	'egrave' => 444,
	'ellipsis' => 1000,
	'emacron' => 444,
	'emdash' => 1000,
	'endash' => 500,
	'eogonek' => 444,
	'eth' => 500,
	'exclamdown' => 333,
	'fi' => 556,
	'fl' => 556,
	'florin' => 500,
	'fraction' => 167,
	'gbreve' => 500,
	'gcommaaccent' => 500,
	'germandbls' => 556,
	'greaterequal' => 549,
	'guillemotleft' => 500,
	'guillemotright' => 500,
	'guilsinglleft' => 333,
	'guilsinglright' => 333,
	'hungarumlaut' => 333,
	'iacute' => 278,
	'icircumflex' => 278,
	'idieresis' => 278,
	'igrave' => 278,
	'imacron' => 278,
	'iogonek' => 278,
	'kcommaaccent' => 556,
	'lacute' => 278,
	'lcaron' => 394,
	'lcommaaccent' => 278,
	'lessequal' => 549,
	'logicalnot' => 570,
	'lozenge' => 494,
	'lslash' => 278,
	'macron' => 333,
	'minus' => 570,
	'mu' => 556,
	'multiply' => 570,
	'nacute' => 556,
	'ncaron' => 556,
	'ncommaaccent' => 556,
	'notequal' => 549,
	'ntilde' => 556,
	'oacute' => 500,
	'ocircumflex' => 500,
	'odieresis' => 500,
	'oe' => 722,
	'ogonek' => 333,
	'ograve' => 500,
	'ohungarumlaut' => 500,
	'omacron' => 500,
	'onehalf' => 750,
	'onequarter' => 750,
	'onesuperior' => 300,
	'ordfeminine' => 300,
	'ordmasculine' => 330,
	'oslash' => 500,
	'otilde' => 500,
	'paragraph' => 540,
	'partialdiff' => 494,
	'periodcentered' => 250,
	'perthousand' => 1000,
	'plusminus' => 570,
	'questiondown' => 500,
	'quotedblbase' => 500,
	'quotedblleft' => 500,
	'quotedblright' => 500,
	'quoteleft' => 333,
	'quoteright' => 333,
	'quotesinglbase' => 333,
	'racute' => 444,
	'radical' => 549,
	'rcaron' => 444,
	'rcommaaccent' => 444,
	'registered' => 747,
	'ring' => 333,
	'sacute' => 389,
	'scaron' => 389,
	'scedilla' => 389,
	'scommaaccent' => 389,
	'section' => 500,
	'sterling' => 500,
	'summation' => 600,
	'tcaron' => 416,
	'tcommaaccent' => 333,
	'thorn' => 556,
	'threequarters' => 750,
	'threesuperior' => 300,
	'tilde' => 333,
	'trademark' => 1000,
	'twosuperior' => 300,
	'uacute' => 556,
	'ucircumflex' => 556,
	'udieresis' => 556,
	'ugrave' => 556,
	'uhungarumlaut' => 556,
	'umacron' => 556,
	'uogonek' => 556,
	'uring' => 556,
	'yacute' => 500,
	'ydieresis' => 500,
	'yen' => 500,
	'zacute' => 444,
	'zcaron' => 444,
	'zdotaccent' => 444,
);

%PDFFont::TimesBoldItalicAvail = (
	'.notdef' => 0,
	'AE' => 944,
	'Aacute' => 667,
	'Abreve' => 667,
	'Acircumflex' => 667,
	'Adieresis' => 667,
	'Agrave' => 667,
	'Amacron' => 667,
	'Aogonek' => 667,
	'Aring' => 667,
	'Atilde' => 667,
	'Cacute' => 667,
	'Ccaron' => 667,
	'Ccedilla' => 667,
	'Dcaron' => 722,
	'Dcroat' => 722,
	'Delta' => 612,
	'Eacute' => 667,
	'Ecaron' => 667,
	'Ecircumflex' => 667,
	'Edieresis' => 667,
	'Edotaccent' => 667,
	'Egrave' => 667,
	'Emacron' => 667,
	'Eogonek' => 667,
	'Eth' => 722,
	'Euro' => 500,
	'Gbreve' => 722,
	'Gcommaaccent' => 722,
	'Iacute' => 389,
	'Icircumflex' => 389,
	'Idieresis' => 389,
	'Idotaccent' => 389,
	'Igrave' => 389,
	'Imacron' => 389,
	'Iogonek' => 389,
	'Kcommaaccent' => 667,
	'Lacute' => 611,
	'Lcaron' => 611,
	'Lcommaaccent' => 611,
	'Lslash' => 611,
	'Nacute' => 722,
	'Ncaron' => 722,
	'Ncommaaccent' => 722,
	'Ntilde' => 722,
	'OE' => 944,
	'Oacute' => 722,
	'Ocircumflex' => 722,
	'Odieresis' => 722,
	'Ograve' => 722,
	'Ohungarumlaut' => 722,
	'Omacron' => 722,
	'Oslash' => 722,
	'Otilde' => 722,
	'Racute' => 667,
	'Rcaron' => 667,
	'Rcommaaccent' => 667,
	'Sacute' => 556,
	'Scaron' => 556,
	'Scedilla' => 556,
	'Scommaaccent' => 556,
	'Tcaron' => 611,
	'Tcommaaccent' => 611,
	'Thorn' => 611,
	'Uacute' => 722,
	'Ucircumflex' => 722,
	'Udieresis' => 722,
	'Ugrave' => 722,
	'Uhungarumlaut' => 722,
	'Umacron' => 722,
	'Uogonek' => 722,
	'Uring' => 722,
	'Yacute' => 611,
	'Ydieresis' => 611,
	'Zacute' => 611,
	'Zcaron' => 611,
	'Zdotaccent' => 611,
	'aacute' => 500,
	'abreve' => 500,
	'acircumflex' => 500,
	'acute' => 333,
	'adieresis' => 500,
	'ae' => 722,
	'agrave' => 500,
	'amacron' => 500,
	'aogonek' => 500,
	'aring' => 500,
	'atilde' => 500,
	'breve' => 333,
	'brokenbar' => 220,
	'bullet' => 350,
	'cacute' => 444,
	'caron' => 333,
	'ccaron' => 444,
	'ccedilla' => 444,
	'cedilla' => 333,
	'cent' => 500,
	'circumflex' => 333,
	'commaaccent' => 250,
	'copyright' => 747,
	'currency' => 500,
	'dagger' => 500,
	'daggerdbl' => 500,
	'dcaron' => 608,
	'dcroat' => 500,
	'degree' => 400,
	'dieresis' => 333,
	'divide' => 570,
	'dotaccent' => 333,
	'dotlessi' => 278,
	'eacute' => 444,
	'ecaron' => 444,
	'ecircumflex' => 444,
	'edieresis' => 444,
	'edotaccent' => 444,
	'egrave' => 444,
	'ellipsis' => 1000,
	'emacron' => 444,
	'emdash' => 1000,
	'endash' => 500,
	'eogonek' => 444,
	'eth' => 500,
	'exclamdown' => 389,
	'fi' => 556,
	'fl' => 556,
	'florin' => 500,
	'fraction' => 167,
	'gbreve' => 500,
	'gcommaaccent' => 500,
	'germandbls' => 500,
	'greaterequal' => 549,
	'guillemotleft' => 500,
	'guillemotright' => 500,
	'guilsinglleft' => 333,
	'guilsinglright' => 333,
	'hungarumlaut' => 333,
	'iacute' => 278,
	'icircumflex' => 278,
	'idieresis' => 278,
	'igrave' => 278,
	'imacron' => 278,
	'iogonek' => 278,
	'kcommaaccent' => 500,
	'lacute' => 278,
	'lcaron' => 382,
	'lcommaaccent' => 278,
	'lessequal' => 549,
	'logicalnot' => 606,
	'lozenge' => 494,
	'lslash' => 278,
	'macron' => 333,
	'minus' => 606,
	'mu' => 576,
	'multiply' => 570,
	'nacute' => 556,
	'ncaron' => 556,
	'ncommaaccent' => 556,
	'notequal' => 549,
	'ntilde' => 556,
	'oacute' => 500,
	'ocircumflex' => 500,
	'odieresis' => 500,
	'oe' => 722,
	'ogonek' => 333,
	'ograve' => 500,
	'ohungarumlaut' => 500,
	'omacron' => 500,
	'onehalf' => 750,
	'onequarter' => 750,
	'onesuperior' => 300,
	'ordfeminine' => 266,
	'ordmasculine' => 300,
	'oslash' => 500,
	'otilde' => 500,
	'paragraph' => 500,
	'partialdiff' => 494,
	'periodcentered' => 250,
	'perthousand' => 1000,
	'plusminus' => 570,
	'questiondown' => 500,
	'quotedblbase' => 500,
	'quotedblleft' => 500,
	'quotedblright' => 500,
	'quoteleft' => 333,
	'quoteright' => 333,
	'quotesinglbase' => 333,
	'racute' => 389,
	'radical' => 549,
	'rcaron' => 389,
	'rcommaaccent' => 389,
	'registered' => 747,
	'ring' => 333,
	'sacute' => 389,
	'scaron' => 389,
	'scedilla' => 389,
	'scommaaccent' => 389,
	'section' => 500,
	'sterling' => 500,
	'summation' => 600,
	'tcaron' => 366,
	'tcommaaccent' => 278,
	'thorn' => 500,
	'threequarters' => 750,
	'threesuperior' => 300,
	'tilde' => 333,
	'trademark' => 1000,
	'twosuperior' => 300,
	'uacute' => 556,
	'ucircumflex' => 556,
	'udieresis' => 556,
	'ugrave' => 556,
	'uhungarumlaut' => 556,
	'umacron' => 556,
	'uogonek' => 556,
	'uring' => 556,
	'yacute' => 444,
	'ydieresis' => 444,
	'yen' => 500,
	'zacute' => 389,
	'zcaron' => 389,
	'zdotaccent' => 389,
);

%PDFFont::TimesItalicAvail = (
	'.notdef' => 0,
	'AE' => 889,
	'Aacute' => 611,
	'Abreve' => 611,
	'Acircumflex' => 611,
	'Adieresis' => 611,
	'Agrave' => 611,
	'Amacron' => 611,
	'Aogonek' => 611,
	'Aring' => 611,
	'Atilde' => 611,
	'Cacute' => 667,
	'Ccaron' => 667,
	'Ccedilla' => 667,
	'Dcaron' => 722,
	'Dcroat' => 722,
	'Delta' => 612,
	'Eacute' => 611,
	'Ecaron' => 611,
	'Ecircumflex' => 611,
	'Edieresis' => 611,
	'Edotaccent' => 611,
	'Egrave' => 611,
	'Emacron' => 611,
	'Eogonek' => 611,
	'Eth' => 722,
	'Euro' => 500,
	'Gbreve' => 722,
	'Gcommaaccent' => 722,
	'Iacute' => 333,
	'Icircumflex' => 333,
	'Idieresis' => 333,
	'Idotaccent' => 333,
	'Igrave' => 333,
	'Imacron' => 333,
	'Iogonek' => 333,
	'Kcommaaccent' => 667,
	'Lacute' => 556,
	'Lcaron' => 611,
	'Lcommaaccent' => 556,
	'Lslash' => 556,
	'Nacute' => 667,
	'Ncaron' => 667,
	'Ncommaaccent' => 667,
	'Ntilde' => 667,
	'OE' => 944,
	'Oacute' => 722,
	'Ocircumflex' => 722,
	'Odieresis' => 722,
	'Ograve' => 722,
	'Ohungarumlaut' => 722,
	'Omacron' => 722,
	'Oslash' => 722,
	'Otilde' => 722,
	'Racute' => 611,
	'Rcaron' => 611,
	'Rcommaaccent' => 611,
	'Sacute' => 500,
	'Scaron' => 500,
	'Scedilla' => 500,
	'Scommaaccent' => 500,
	'Tcaron' => 556,
	'Tcommaaccent' => 556,
	'Thorn' => 611,
	'Uacute' => 722,
	'Ucircumflex' => 722,
	'Udieresis' => 722,
	'Ugrave' => 722,
	'Uhungarumlaut' => 722,
	'Umacron' => 722,
	'Uogonek' => 722,
	'Uring' => 722,
	'Yacute' => 556,
	'Ydieresis' => 556,
	'Zacute' => 556,
	'Zcaron' => 556,
	'Zdotaccent' => 556,
	'aacute' => 500,
	'abreve' => 500,
	'acircumflex' => 500,
	'acute' => 333,
	'adieresis' => 500,
	'ae' => 667,
	'agrave' => 500,
	'amacron' => 500,
	'aogonek' => 500,
	'aring' => 500,
	'atilde' => 500,
	'breve' => 333,
	'brokenbar' => 275,
	'bullet' => 350,
	'cacute' => 444,
	'caron' => 333,
	'ccaron' => 444,
	'ccedilla' => 444,
	'cedilla' => 333,
	'cent' => 500,
	'circumflex' => 333,
	'commaaccent' => 250,
	'copyright' => 760,
	'currency' => 500,
	'dagger' => 500,
	'daggerdbl' => 500,
	'dcaron' => 544,
	'dcroat' => 500,
	'degree' => 400,
	'dieresis' => 333,
	'divide' => 675,
	'dotaccent' => 333,
	'dotlessi' => 278,
	'eacute' => 444,
	'ecaron' => 444,
	'ecircumflex' => 444,
	'edieresis' => 444,
	'edotaccent' => 444,
	'egrave' => 444,
	'ellipsis' => 889,
	'emacron' => 444,
	'emdash' => 889,
	'endash' => 500,
	'eogonek' => 444,
	'eth' => 500,
	'exclamdown' => 389,
	'fi' => 500,
	'fl' => 500,
	'florin' => 500,
	'fraction' => 167,
	'gbreve' => 500,
	'gcommaaccent' => 500,
	'germandbls' => 500,
	'greaterequal' => 549,
	'guillemotleft' => 500,
	'guillemotright' => 500,
	'guilsinglleft' => 333,
	'guilsinglright' => 333,
	'hungarumlaut' => 333,
	'iacute' => 278,
	'icircumflex' => 278,
	'idieresis' => 278,
	'igrave' => 278,
	'imacron' => 278,
	'iogonek' => 278,
	'kcommaaccent' => 444,
	'lacute' => 278,
	'lcaron' => 300,
	'lcommaaccent' => 278,
	'lessequal' => 549,
	'logicalnot' => 675,
	'lozenge' => 471,
	'lslash' => 278,
	'macron' => 333,
	'minus' => 675,
	'mu' => 500,
	'multiply' => 675,
	'nacute' => 500,
	'ncaron' => 500,
	'ncommaaccent' => 500,
	'notequal' => 549,
	'ntilde' => 500,
	'oacute' => 500,
	'ocircumflex' => 500,
	'odieresis' => 500,
	'oe' => 667,
	'ogonek' => 333,
	'ograve' => 500,
	'ohungarumlaut' => 500,
	'omacron' => 500,
	'onehalf' => 750,
	'onequarter' => 750,
	'onesuperior' => 300,
	'ordfeminine' => 276,
	'ordmasculine' => 310,
	'oslash' => 500,
	'otilde' => 500,
	'paragraph' => 523,
	'partialdiff' => 476,
	'periodcentered' => 250,
	'perthousand' => 1000,
	'plusminus' => 675,
	'questiondown' => 500,
	'quotedblbase' => 556,
	'quotedblleft' => 556,
	'quotedblright' => 556,
	'quoteleft' => 333,
	'quoteright' => 333,
	'quotesinglbase' => 333,
	'racute' => 389,
	'radical' => 453,
	'rcaron' => 389,
	'rcommaaccent' => 389,
	'registered' => 760,
	'ring' => 333,
	'sacute' => 389,
	'scaron' => 389,
	'scedilla' => 389,
	'scommaaccent' => 389,
	'section' => 500,
	'sterling' => 500,
	'summation' => 600,
	'tcaron' => 300,
	'tcommaaccent' => 278,
	'thorn' => 500,
	'threequarters' => 750,
	'threesuperior' => 300,
	'tilde' => 333,
	'trademark' => 980,
	'twosuperior' => 300,
	'uacute' => 500,
	'ucircumflex' => 500,
	'udieresis' => 500,
	'ugrave' => 500,
	'uhungarumlaut' => 500,
	'umacron' => 500,
	'uogonek' => 500,
	'uring' => 500,
	'yacute' => 444,
	'ydieresis' => 444,
	'yen' => 500,
	'zacute' => 389,
	'zcaron' => 389,
	'zdotaccent' => 389,
);

%PDFFont::TimesRomanAvail = (
	'.notdef' => 0,
	'AE' => 889,
	'Aacute' => 722,
	'Abreve' => 722,
	'Acircumflex' => 722,
	'Adieresis' => 722,
	'Agrave' => 722,
	'Amacron' => 722,
	'Aogonek' => 722,
	'Aring' => 722,
	'Atilde' => 722,
	'Cacute' => 667,
	'Ccaron' => 667,
	'Ccedilla' => 667,
	'Dcaron' => 722,
	'Dcroat' => 722,
	'Delta' => 612,
	'Eacute' => 611,
	'Ecaron' => 611,
	'Ecircumflex' => 611,
	'Edieresis' => 611,
	'Edotaccent' => 611,
	'Egrave' => 611,
	'Emacron' => 611,
	'Eogonek' => 611,
	'Eth' => 722,
	'Euro' => 500,
	'Gbreve' => 722,
	'Gcommaaccent' => 722,
	'Iacute' => 333,
	'Icircumflex' => 333,
	'Idieresis' => 333,
	'Idotaccent' => 333,
	'Igrave' => 333,
	'Imacron' => 333,
	'Iogonek' => 333,
	'Kcommaaccent' => 722,
	'Lacute' => 611,
	'Lcaron' => 611,
	'Lcommaaccent' => 611,
	'Lslash' => 611,
	'Nacute' => 722,
	'Ncaron' => 722,
	'Ncommaaccent' => 722,
	'Ntilde' => 722,
	'OE' => 889,
	'Oacute' => 722,
	'Ocircumflex' => 722,
	'Odieresis' => 722,
	'Ograve' => 722,
	'Ohungarumlaut' => 722,
	'Omacron' => 722,
	'Oslash' => 722,
	'Otilde' => 722,
	'Racute' => 667,
	'Rcaron' => 667,
	'Rcommaaccent' => 667,
	'Sacute' => 556,
	'Scaron' => 556,
	'Scedilla' => 556,
	'Scommaaccent' => 556,
	'Tcaron' => 611,
	'Tcommaaccent' => 611,
	'Thorn' => 556,
	'Uacute' => 722,
	'Ucircumflex' => 722,
	'Udieresis' => 722,
	'Ugrave' => 722,
	'Uhungarumlaut' => 722,
	'Umacron' => 722,
	'Uogonek' => 722,
	'Uring' => 722,
	'Yacute' => 722,
	'Ydieresis' => 722,
	'Zacute' => 611,
	'Zcaron' => 611,
	'Zdotaccent' => 611,
	'aacute' => 444,
	'abreve' => 444,
	'acircumflex' => 444,
	'acute' => 333,
	'adieresis' => 444,
	'ae' => 667,
	'agrave' => 444,
	'amacron' => 444,
	'aogonek' => 444,
	'aring' => 444,
	'atilde' => 444,
	'breve' => 333,
	'brokenbar' => 200,
	'bullet' => 350,
	'cacute' => 444,
	'caron' => 333,
	'ccaron' => 444,
	'ccedilla' => 444,
	'cedilla' => 333,
	'cent' => 500,
	'circumflex' => 333,
	'commaaccent' => 250,
	'copyright' => 760,
	'currency' => 500,
	'dagger' => 500,
	'daggerdbl' => 500,
	'dcaron' => 588,
	'dcroat' => 500,
	'degree' => 400,
	'dieresis' => 333,
	'divide' => 564,
	'dotaccent' => 333,
	'dotlessi' => 278,
	'eacute' => 444,
	'ecaron' => 444,
	'ecircumflex' => 444,
	'edieresis' => 444,
	'edotaccent' => 444,
	'egrave' => 444,
	'ellipsis' => 1000,
	'emacron' => 444,
	'emdash' => 1000,
	'endash' => 500,
	'eogonek' => 444,
	'eth' => 500,
	'exclamdown' => 333,
	'fi' => 556,
	'fl' => 556,
	'florin' => 500,
	'fraction' => 167,
	'gbreve' => 500,
	'gcommaaccent' => 500,
	'germandbls' => 500,
	'greaterequal' => 549,
	'guillemotleft' => 500,
	'guillemotright' => 500,
	'guilsinglleft' => 333,
	'guilsinglright' => 333,
	'hungarumlaut' => 333,
	'iacute' => 278,
	'icircumflex' => 278,
	'idieresis' => 278,
	'igrave' => 278,
	'imacron' => 278,
	'iogonek' => 278,
	'kcommaaccent' => 500,
	'lacute' => 278,
	'lcaron' => 344,
	'lcommaaccent' => 278,
	'lessequal' => 549,
	'logicalnot' => 564,
	'lozenge' => 471,
	'lslash' => 278,
	'macron' => 333,
	'minus' => 564,
	'mu' => 500,
	'multiply' => 564,
	'nacute' => 500,
	'ncaron' => 500,
	'ncommaaccent' => 500,
	'notequal' => 549,
	'ntilde' => 500,
	'oacute' => 500,
	'ocircumflex' => 500,
	'odieresis' => 500,
	'oe' => 722,
	'ogonek' => 333,
	'ograve' => 500,
	'ohungarumlaut' => 500,
	'omacron' => 500,
	'onehalf' => 750,
	'onequarter' => 750,
	'onesuperior' => 300,
	'ordfeminine' => 276,
	'ordmasculine' => 310,
	'oslash' => 500,
	'otilde' => 500,
	'paragraph' => 453,
	'partialdiff' => 476,
	'periodcentered' => 250,
	'perthousand' => 1000,
	'plusminus' => 564,
	'questiondown' => 444,
	'quotedblbase' => 444,
	'quotedblleft' => 444,
	'quotedblright' => 444,
	'quoteleft' => 333,
	'quoteright' => 333,
	'quotesinglbase' => 333,
	'racute' => 333,
	'radical' => 453,
	'rcaron' => 333,
	'rcommaaccent' => 333,
	'registered' => 760,
	'ring' => 333,
	'sacute' => 389,
	'scaron' => 389,
	'scedilla' => 389,
	'scommaaccent' => 389,
	'section' => 500,
	'sterling' => 500,
	'summation' => 600,
	'tcaron' => 326,
	'tcommaaccent' => 278,
	'thorn' => 500,
	'threequarters' => 750,
	'threesuperior' => 300,
	'tilde' => 333,
	'trademark' => 980,
	'twosuperior' => 300,
	'uacute' => 500,
	'ucircumflex' => 500,
	'udieresis' => 500,
	'ugrave' => 500,
	'uhungarumlaut' => 500,
	'umacron' => 500,
	'uogonek' => 500,
	'uring' => 500,
	'yacute' => 500,
	'ydieresis' => 500,
	'yen' => 500,
	'zacute' => 444,
	'zcaron' => 444,
	'zdotaccent' => 444,
);

@PDFFont::CourierWidth = ( 600 ) x 232;

@PDFFont::HelveticaBoldWidth = (
	278, 333, 474, 556, 556, 889, 722, 278, 333, 333, 389, 584, 278, 333, 278, 278, 
	556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 333, 333, 584, 584, 584, 611, 
	975, 722, 722, 722, 722, 667, 611, 778, 722, 278, 556, 722, 611, 833, 722, 778, 
	667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 333, 278, 333, 584, 556, 
	278, 556, 611, 556, 611, 556, 333, 611, 611, 278, 278, 556, 278, 889, 611, 611, 
	611, 611, 389, 556, 333, 611, 556, 778, 556, 556, 500, 389, 280, 389, 584
);

@PDFFont::HelveticaBoldObliqueWidth = (
	278, 333, 474, 556, 556, 889, 722, 278, 333, 333, 389, 584, 278, 333, 278, 278, 
	556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 333, 333, 584, 584, 584, 611, 
	975, 722, 722, 722, 722, 667, 611, 778, 722, 278, 556, 722, 611, 833, 722, 778, 
	667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 333, 278, 333, 584, 556, 
	278, 556, 611, 556, 611, 556, 333, 611, 611, 278, 278, 556, 278, 889, 611, 611, 
	611, 611, 389, 556, 333, 611, 556, 778, 556, 556, 500, 389, 280, 389, 584
);

@PDFFont::HelveticaObliqueWidth = (
	278, 278, 355, 556, 556, 889, 667, 222, 333, 333, 389, 584, 278, 333, 278, 278, 
	556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 278, 278, 584, 584, 584, 556, 
	1015, 667, 667, 722, 722, 667, 611, 778, 722, 278, 500, 667, 556, 833, 722, 778, 
	667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 278, 278, 278, 469, 556, 
	222, 556, 556, 500, 556, 556, 278, 556, 556, 222, 222, 500, 222, 833, 556, 556, 
	556, 556, 333, 500, 278, 556, 500, 722, 500, 500, 500, 334, 260, 334, 584
);

@PDFFont::HelveticaWidth = (
	278, 278, 355, 556, 556, 889, 667, 222, 333, 333, 389, 584, 278, 333, 278, 278, 
	556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 278, 278, 584, 584, 584, 556, 
	1015, 667, 667, 722, 722, 667, 611, 778, 722, 278, 500, 667, 556, 833, 722, 778, 
	667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 278, 278, 278, 469, 556, 
	222, 556, 556, 500, 556, 556, 278, 556, 556, 222, 222, 500, 222, 833, 556, 556, 
	556, 556, 333, 500, 278, 556, 500, 722, 500, 500, 500, 334, 260, 334, 584
);

@PDFFont::SymbolWidth = (
	250, 333, 713, 500, 549, 833, 778, 439, 333, 333, 500, 549, 250, 549, 250, 278, 
	500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 278, 278, 549, 549, 549, 444, 
	549, 722, 667, 722, 612, 611, 763, 603, 722, 333, 631, 722, 686, 889, 722, 722, 
	768, 741, 556, 592, 611, 690, 439, 768, 645, 795, 611, 333, 863, 333, 658, 500, 
	500, 631, 549, 549, 494, 439, 521, 411, 603, 329, 603, 549, 549, 576, 521, 549, 
	549, 521, 549, 603, 439, 576, 713, 686, 493, 686, 494, 480, 200, 480, 549, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
	750, 620, 247, 549, 167, 713, 500, 753, 753, 753, 753, 1042, 987, 603, 987, 603, 
	400, 549, 411, 549, 549, 713, 494, 460, 549, 549, 549, 549, 1000, 603, 1000, 658, 
	823, 686, 795, 987, 768, 768, 823, 768, 768, 713, 713, 713, 713, 713, 713, 713, 
	768, 713, 790, 790, 890, 823, 549, 250, 713, 603, 603, 1042, 987, 603, 987, 603, 
	494, 329, 790, 790, 786, 713, 384, 384, 384, 384, 384, 384, 494, 494, 494, 494, 
	0, 329, 274, 686, 686, 686, 384, 384, 384, 384, 384, 384, 494, 494, 494
);

@PDFFont::TimesBoldWidth = (
	250, 333, 555, 500, 500, 1000, 833, 333, 333, 333, 500, 570, 250, 333, 250, 278, 
	500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 570, 570, 570, 500, 
	930, 722, 667, 722, 722, 667, 611, 778, 778, 389, 500, 778, 667, 944, 722, 778, 
	611, 778, 722, 556, 667, 722, 722, 1000, 722, 722, 667, 333, 278, 333, 581, 500, 
	333, 500, 556, 444, 556, 444, 333, 500, 556, 278, 333, 556, 278, 833, 556, 500, 
	556, 556, 444, 389, 333, 556, 500, 722, 500, 500, 444, 394, 220, 394, 520
);

@PDFFont::TimesBoldItalicWidth = (
	250, 389, 555, 500, 500, 833, 778, 333, 333, 333, 500, 570, 250, 333, 250, 278, 
	500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 570, 570, 570, 500, 
	832, 667, 667, 667, 722, 667, 667, 722, 778, 389, 500, 667, 611, 889, 722, 722, 
	611, 722, 667, 556, 611, 722, 667, 889, 667, 611, 611, 333, 278, 333, 570, 500, 
	333, 500, 500, 444, 500, 444, 333, 500, 556, 278, 278, 500, 278, 778, 556, 500, 
	500, 500, 389, 389, 278, 556, 444, 667, 500, 444, 389, 348, 220, 348, 570
);

@PDFFont::TimesItalicWidth = (
	250, 333, 420, 500, 500, 833, 778, 333, 333, 333, 500, 675, 250, 333, 250, 278, 
	500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 675, 675, 675, 500, 
	920, 611, 611, 667, 722, 611, 611, 722, 722, 333, 444, 667, 556, 833, 667, 722, 
	611, 722, 611, 500, 556, 722, 611, 833, 611, 556, 556, 389, 278, 389, 422, 500, 
	333, 500, 500, 444, 500, 444, 278, 500, 500, 278, 278, 444, 278, 722, 500, 500, 
	500, 500, 389, 389, 278, 500, 444, 667, 444, 444, 389, 400, 275, 400, 541
);

@PDFFont::TimesRomanWidth = (
	250, 333, 408, 500, 500, 833, 778, 333, 333, 333, 500, 564, 250, 333, 250, 278, 
	500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 278, 278, 564, 564, 564, 444, 
	921, 722, 667, 667, 722, 611, 556, 722, 722, 333, 389, 722, 611, 889, 722, 722, 
	556, 722, 667, 556, 611, 722, 722, 944, 722, 722, 611, 333, 278, 333, 469, 500, 
	333, 444, 500, 444, 500, 444, 333, 500, 500, 278, 278, 500, 278, 778, 500, 500, 
	500, 500, 333, 389, 278, 500, 500, 722, 500, 500, 444, 480, 200, 480, 541
);

@PDFFont::ZapfDingbatsWidth = (
	278, 974, 961, 974, 980, 719, 789, 790, 791, 690, 960, 939, 549, 855, 911, 933, 
	911, 945, 974, 755, 846, 762, 761, 571, 677, 763, 760, 759, 754, 494, 552, 537, 
	577, 692, 786, 788, 788, 790, 793, 794, 816, 823, 789, 841, 823, 833, 816, 831, 
	923, 744, 723, 749, 790, 792, 695, 776, 768, 792, 759, 707, 708, 682, 701, 826, 
	815, 789, 789, 707, 687, 696, 689, 786, 787, 713, 791, 785, 791, 873, 761, 762, 
	762, 759, 759, 892, 892, 788, 784, 438, 138, 277, 415, 392, 392, 668, 668, 0, 
	390, 390, 317, 317, 276, 276, 509, 509, 410, 410, 234, 234, 334, 334, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
	0, 732, 544, 544, 910, 667, 760, 760, 776, 595, 694, 626, 788, 788, 788, 788, 
	788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 
	788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 
	788, 788, 788, 788, 894, 838, 1016, 458, 748, 924, 748, 918, 927, 928, 928, 834, 
	873, 828, 924, 924, 917, 930, 931, 463, 883, 836, 836, 867, 867, 696, 696, 874, 
	0, 874, 760, 946, 771, 865, 771, 888, 967, 888, 831, 873, 927, 970, 918
);

$PDFFont::Fonts{'Courier'} = {
	'Subtype' => 'Type1',
	'FirstChar' => undef,
	'BaseFont' => 'Courier',
	'Widths' => \@CourierWidth,
	'FontDescriptor' => {
		'FontBBox' => [ -23, -250, 715, 805 ],
		'StemV' => 51,
		'StemH' => 51,
		'ItalicAngle' => 0,
		'CapHeight' => 562,
		'XHeight' => 426,
		'Ascent' => 629,
		'Descent' => -157,
	},
};

$PDFFont::Fonts{'Courier-Bold'} = {
	'Subtype' => 'Type1',
	'FirstChar' => undef,
	'BaseFont' => 'Courier-Bold',
	'Widths' => \@CourierWidth,
	'FontDescriptor' => {
		'FontBBox' => [ -113, -250, 749, 801 ],
		'StemV' => 106,
		'StemH' => 84,
		'ItalicAngle' => 0,
		'CapHeight' => 562,
		'XHeight' => 439,
		'Ascent' => 629,
		'Descent' => -157,
	},
};

$PDFFont::Fonts{'Courier-Oblique'} = {
	'Subtype' => 'Type1',
	'FirstChar' => undef,
	'BaseFont' => 'Courier-Oblique',
	'Widths' => \@CourierWidth,
	'FontDescriptor' => {
		'FontBBox' => [ -27, -250, 849, 805 ],
		'StemV' => 51,
		'StemH' => 51,
		'ItalicAngle' => -12,
		'CapHeight' => 562,
		'XHeight' => 426,
		'Ascent' => 629,
		'Descent' => -157,
	},
};

$PDFFont::Fonts{'Courier-BoldOblique'} = {
	'Subtype' => 'Type1',
	'FirstChar' => undef,
	'BaseFont' => 'Courier-BoldOblique',
	'Widths' => \@CourierWidth,
	'FontDescriptor' => {
		'FontBBox' => [ -57, -250, 869, 801 ],
		'StemV' => 106,
		'StemH' => 84,
		'ItalicAngle' => -12,
		'CapHeight' => 562,
		'XHeight' => 439,
		'Ascent' => 629,
		'Descent' => -157,
	},
};

$PDFFont::Fonts{'Helvetica'} = {
	'Subtype' => 'Type1',
	'FirstChar' => undef,
	'BaseFont' => 'Helvetica',
	'Widths' => \@HelveticaWidth,
	'AvailWidths' => \%HelveticaAvail,
	'FontDescriptor' => {
		'FontBBox' => [ -166, -225, 1000, 931 ],
		'StemV' => 88,
		'StemH' => 76,
		'ItalicAngle' => 0,
		'CapHeight' => 718,
		'XHeight' => 523,
		'Ascent' => 718,
		'Descent' => -207,
	},
};

$PDFFont::Fonts{'Helvetica-Bold'} = {
	'Subtype' => 'Type1',
	'FirstChar' => undef,
	'BaseFont' => 'Helvetica-Bold',
	'Widths' => \@HelveticaBoldWidth,
	'AvailWidths' => \%HelveticaBoldAvail,
	'FontDescriptor' => {
		'FontBBox' => [ -170, -228, 1003, 962 ],
		'StemV' => 140,
		'StemH' => 118,
		'ItalicAngle' => 0,
		'CapHeight' => 718,
		'XHeight' => 532,
		'Ascent' => 718,
		'Descent' => -207,
	},
};

$PDFFont::Fonts{'Helvetica-Oblique'} = {
	'Subtype' => 'Type1',
	'FirstChar' => undef,
	'BaseFont' => 'Helvetica-Oblique',
	'Widths' => \@HelveticaObliqueWidth,
	'AvailWidths' => \%HelveticaObliqueAvail,
	'FontDescriptor' => {
		'FontBBox' => [ -170, -225, 1116, 931 ],
		'StemV' => 88,
		'StemH' => 76,
		'ItalicAngle' => -12,
		'CapHeight' => 718,
		'XHeight' => 532,
		'Ascent' => 718,
		'Descent' => -207,
	},
};

$PDFFont::Fonts{'Helvetica-BoldOblique'} = {
	'Subtype' => 'Type1',
	'FirstChar' => undef,
	'BaseFont' => 'Helvetica-BoldOblique',
	'Widths' => \@HelveticaBoldObliqueWidth,
	'AvailWidths' => \%HelveticaBoldObliqueAvail,
	'FontDescriptor' => {
		'FontBBox' => [ -174, -228, 1114, 962 ],
		'StemV' => 140,
		'StemH' => 118,
		'ItalicAngle' => -12,
		'CapHeight' => 718,
		'XHeight' => 532,
		'Ascent' => 718,
		'Descent' => -207,
	},
};

$PDFFont::Fonts{'Symbol'} = {
	'Subtype' => 'Type1',
	'FirstChar' => 32,
	'BaseFont' => 'Symbol',
	'Widths' => \@SymbolWidth,
	'FontDescriptor' => {
		'FontBBox' => [ -180, -293, 1090, 1010 ],
		'StemV' => 85,
		'StemH' => 92,
		'ItalicAngle' => 0,
		'Ascent' => 0,
		'Descent' => 0,
	},
};

$PDFFont::Fonts{'Times-Roman'} = {
	'Subtype' => 'Type1',
	'FirstChar' => undef,
	'BaseFont' => 'Times-Roman',
	'Widths' => \@TimesRomanWidth,
	'AvailWidths' => \%TimesRomanAvail,
	'FontDescriptor' => {
		'FontBBox' => [ -168, -218, 1000, 898 ],
		'StemV' => 84,
		'StemH' => 28,
		'ItalicAngle' => 0,
		'CapHeight' => 662,
		'XHeight' => 450,
		'Ascent' => 683,
		'Descent' => -217,
	},
};

$PDFFont::Fonts{'Times-Bold'} = {
	'Subtype' => 'Type1',
	'FirstChar' => undef,
	'BaseFont' => 'Times-Bold',
	'Widths' => \@TimesBoldWidth,
	'AvailWidths' => \%TimesBoldAvail,
	'FontDescriptor' => {
		'FontBBox' => [ -168, -218, 1000, 935 ],
		'StemV' => 139,
		'StemH' => 44,
		'ItalicAngle' => 0,
		'CapHeight' => 676,
		'XHeight' => 461,
		'Ascent' => 683,
		'Descent' => -217,
	},
};

$PDFFont::Fonts{'Times-Italic'} = {
	'Subtype' => 'Type1',
	'FirstChar' => undef,
	'BaseFont' => 'Times-Italic',
	'Widths' => \@TimesItalicWidth,
	'AvailWidths' => \%TimesItalicAvail,
	'FontDescriptor' => {
		'FontBBox' => [ -169, -217, 1010, 883 ],
		'StemV' => 76,
		'StemH' => 32,
		'ItalicAngle' => -11.5,
		'CapHeight' => 653,
		'XHeight' => 441,
		'Ascent' => 683,
		'Descent' => -217,
	},
};

$PDFFont::Fonts{'Times-BoldItalic'} = {
	'Subtype' => 'Type1',
	'FirstChar' => undef,
	'BaseFont' => 'Times-BoldItalic',
	'Widths' => \@TimesBoldItalicWidth,
	'AvailWidths' => \%TimesBoldItalicAvail,
	'FontDescriptor' => {
		'FontBBox' => [ -200, -218, 996, 921 ],
		'StemV' => 121,
		'StemH' => 42,
		'ItalicAngle' => -15,
		'CapHeight' => 669,
		'XHeight' => 462,
		'Ascent' => 683,
		'Descent' => -217,
	},
};

$PDFFont::Fonts{'ZapfDingbats'} = {
	'Subtype' => 'Type1',
	'FirstChar' => 32,
	'BaseFont' => 'ZapfDingbats',
	'Widths' => \@ZapfDingbatsWidth,
	'FontDescriptor' => {
		'FontBBox' => [ -1, -143, 981, 820 ],
		'StemV' => 90,
		'StemH' => 28,
		'ItalicAngle' => 0,
		'Ascent' => 0,
		'Descent' => 0,
	},
};

# Additional names to access the same fonts
%PDFFont::FontNameMap = (
	'Arial'				=> 'Helvetica',
	'Arial,Bold'		=> 'Helvetica-Bold',
	'Arial,BoldItalic'	=> 'Helvetica-BoldOblique',
	'Arial,Italic'		=> 'Helvetica-Oblique',
	'TimesNewRoman'		=> 'Times-Roman',
	'TimesNewRoman,Bold'	=> 'Times-Bold',
	'TimesNewRoman,Italic'	=> 'Times-Italic',
	'TimesNewRoman,BoldItalic' => 'Times-BoldItalic',
	'CourierNew'		=> 'Courier',
	'CourierNew,Bold'	=> 'Courier-Bold',
	'CourierNew,Italic'	=> 'Courier-Oblique',
	'CourierNew,BoldItalic'	=> 'Courier-BoldOblique',
	'TiRo'	=> 'Times-Roman',
	'TiBo'	=> 'Times-Bold',
	'TiBI'	=> 'Times-BoldItalic',
	'TiIt'	=> 'Times-Italic',
	'Cour'	=> 'Courier',
	'CoBo'	=> 'Courier-Bold',
	'CoOb'	=> 'Courier-Oblique',
	'CoBO'	=> 'Courier-BoldOblique',
	'Helv'	=> 'Helvetica',
	'HeOb'	=> 'Helvetica-Oblique',
	'HeBo'	=> 'Helvetica-Bold',
	'HeBO'	=> 'Helvetica-BoldOblique',
	'ZaDb'	=> 'ZapfDingbats',
);

for( keys %PDFFont::FontNameMap ){
	$PDFFont::Fonts{$_} = $PDFFont::Fonts{ $PDFFont::FontNameMap{$_} };
}

sub getFontTrueName {
	my $font = shift;
	if( defined $PDFFont::Fonts{$font} ){
		return $PDFFont::Fonts{$font}->{BaseFont};
	} else {
		return $font;
	}
	return $retval;
}

sub correlate {
	my( $fromfont, $rel, $tofont ) = @_;
	# $rel must be 'Normal', 'Bold', 'Italic', or 'BoldItalic'
	$PDFFont::Fonts{$fromfont}->{$rel} = $tofont;
}

# Correlate normal, bold, italic, and bold-italic variants of a same font.
# $rels is a hash ref, such as {'Normal'=>$ttf1, 'Bold'=>$ttf2, 'Italic'=>$ttf3, 'BoldItalic'=>$ttf4}
sub correlateAll {
	my( $rels ) = shift;
	return if( ref( $rels ) ne 'HASH' );
	for my $font ( values %$rels ){
		for my $rel ( keys %$rels ){
			correlate( $font, $rel, $rels->{$rel} );
		}
	}
}

correlateAll( { Normal => 'Courier', Bold => 'Courier-Bold', Italic => 'Courier-Oblique', BoldItalic => 'Courier-BoldOblique' } );
correlateAll( { Normal => 'Helvetica', Bold => 'Helvetica-Bold', Italic => 'Helvetica-Oblique', BoldItalic => 'Helvetica-BoldOblique' } );
correlateAll( { Normal => 'Times-Roman', Bold => 'Times-Bold', Italic => 'Times-Italic', BoldItalic => 'Times-BoldItalic' } );

%PDFFont::WinAnsiChars = ( );
%PDFFont::PDFDocChars = ( );
%PDFFont::MacRomanChars = ( );
%PDFFont::StandardChars = ( );

do {
	my $i;
	$i = 127; for( @PDFFont::WinAnsiEncoding ){ $PDFFont::WinAnsiChars{$_} = $i++; }
	$i = 127; for( @PDFFont::PDFDocEncoding ){ $PDFFont::PDFDocChars{$_} = $i++; }
	$i = 127; for( @PDFFont::StandardEncoding ){ $PDFFont::StandardChars{$_} = $i++; }
	$i = 127; for( @PDFFont::MacRomanEncoding ){ $PDFFont::MacRomanChars{$_} = $i++; }
};

##############################################################################

sub new {
	my ( $class, $FontName, $Encoding ) = @_;
	$Encoding ||= $PDF::root->{Prefs}->{Encoding} || 'WinAnsiEncoding';
	my $this = {
		'Name' => '',
		'FontPtr' => $PDF::root->{Fonts}->{$FontName}->{$Encoding},
		'Descriptor' => undef,
	};
	bless $this, $class;
	if( defined $Encoding && $Encoding eq 'PDFDocEncoding' && exists $PDFFont::AdobeFontNames{$FontName} ){
		$this->setName( $PDFFont::AdobeFontNames{$FontName} );
	} else {
		$this->setName( );
	}
	$PDF::root->getPagesRoot( )->appendFont( $this );
	my $FontPtr = $this->{FontPtr};
	# If the font is not one of the base 14 built-in fonts, build a FontDescriptor for it
	if( !defined $PDFFont::Fonts{ $FontPtr->{BaseFont} } ){
		$this->{Descriptor} = new FontDescriptor( $FontName, $Encoding );
		$this->appendChild( $this->{Descriptor} );
	}
	return $this;
}

sub getCharWidth {
	my $this = shift;
	my $char = ord( shift );	# Single character
	my $ptr = $this->{FontPtr};
	if( $char < $ptr->{FirstChar} || $char > $ptr->{FirstChar} + scalar @{$ptr->{Widths}} ){
		return $ptr->{FontDescriptor}->{MissingWidth} || 0;
	}
	return $ptr->{Widths}->[ $char - $ptr->{FirstChar} ];
}

sub getWordWidth {
	my $this = shift;
	my @chars = split( //, shift );
	my $size = PDF::tellSize( shift );	# Font size in point
	my $width = 0;
	for( @chars ){
		$width += $this->getCharWidth( $_ );
	}
	return $width * $size / 1000;
}

sub makeCode {
	my $this = shift;
	my $FontPtr = $this->{FontPtr};
	print join( $PDF::endln,
		qq{$this->{ObjId} 0 obj},
		'<<',
		'/Type /Font',
		qq{/Subtype /$FontPtr->{Subtype}},
		qq{/BaseFont /$FontPtr->{BaseFont}},
	);
	if( defined $PDFFont::Fonts{ $FontPtr->{BaseFont} } ){
		if( $FontPtr->{Subtype} eq 'Type1' && $FontPtr->{BaseFont} ne 'ZapfDingbats' ){
			if( $FontPtr->{Encoding} eq 'PDFDocEncoding' ){	# Which means an AcroForm is present
				print $PDF::endln . qq{/Encoding $PDF::root->{Catalog}->{AcroForm}->{PDFDocEncoding}->{ObjId} 0 R };
			} else {
				print $PDF::endln . qq{/Encoding /$FontPtr->{Encoding} } if( defined $FontPtr->{Encoding} );
			}
		}
	} else {
		if( $FontPtr->{Subtype} eq 'TrueType' ){
			print join( $PDF::endln,
				'',
				'/Encoding /WinAnsiEncoding',
				qq{/FirstChar $FontPtr->{FirstChar}},
				qq{/LastChar $FontPtr->{LastChar}},
				'/Widths [ ',
			);
		} else {
			print join( $PDF::endln,
				'',
				qq{/FirstChar $FontPtr->{FirstChar}},
				qq{/LastChar $FontPtr->{LastChar}},
				'/Widths [ ',
			);
		}
		print join( $PDF::endln,
			join( ' ', @{$FontPtr->{Widths}} ),
			' ]',
			qq{/FontDescriptor $this->{Descriptor}->{ObjId} 0 R},
		);
	}
	print join( $PDF::endln,
		'',
		'>>',
		'endobj',
		''
	);
}

sub finalize {
	my $this = shift;
	delete $this->{FontPtr};
}

1;